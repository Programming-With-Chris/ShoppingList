<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:model="clr-namespace:ShoppingList.Model"
             xmlns:viewmodel="clr-namespace:ShoppingList.ViewModels"
             xmlns:controls="clr-namespace:ShoppingList.Controls"
             x:DataType="viewmodel:UserListDetailViewModel"
             x:Class="ShoppingList.UserListDetails"
             BackgroundColor="{DynamicResource Secondary}"
             Title="{Binding Title}"
             >


    <Shell.BackButtonBehavior>
        <BackButtonBehavior Command="{Binding GoBackToListScreenCommand}"
            />
    </Shell.BackButtonBehavior>


    
    <Grid ColumnDefinitions="*,*,*"
          ColumnSpacing="3"
          RowDefinitions="*,Auto">

        <!-- Refresh view doesn't work on iOS yet-->
        <!--<RefreshView Grid.ColumnSpan="3" Command="{Binding RefreshUserListDetailScreenCommand}"
                     CommandParameter="UserListCollectionView"
                     IsRefreshing="{Binding IsRefreshing}"
		             Grid.Row="0">-->
            <CollectionView ItemsSource="{Binding UserList.Items}"
                        CanReorderItems="True"
                        SelectionMode="None"
                        x:Name="UserListCollectionView"
                            Grid.ColumnSpan="3"
                            Grid.Row="0">
                
                <CollectionView.ItemTemplate >
                    <DataTemplate x:DataType="model:Item">
                        <Grid Padding="10"
                          ColumnDefinitions="*,*,*"
                          RowDefinitions="*,Auto">
                    <SwipeView Grid.ColumnSpan="3">
                        <SwipeView.RightItems>
                            <SwipeItems>
                                <SwipeItem  IconImageSource="delete"
                                            BackgroundColor="{DynamicResource DarkAccent}"
                                            Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:UserListDetailViewModel}}, Path=DeleteItemCommand}"
                                            CommandParameter="{Binding .}"
                                            >
                                </SwipeItem>
                            </SwipeItems>
                        </SwipeView.RightItems>
                            <Frame Grid.ColumnSpan="3"
                               Padding="5"
                               Margin="0,0,0,10"
                               x:Name="ItemFrame"
                               BindingContext="{Binding .}">
                                <Frame.GestureRecognizers>
                                    <TapGestureRecognizer CommandParameter="{Binding .}"
                                                      Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:UserListDetailViewModel}}, Path=GoToItemDetailCommand}"/>

                                    <!--<SwipeGestureRecognizer CommandParameter="{Binding .}"
                                                      Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:UserListDetailViewModel}}, Path=DeleteItemCommand}"
                                                            Direction="Right"/>-->
                                </Frame.GestureRecognizers>
                                <Grid ColumnDefinitions="Auto,*,*"
                                  RowDefinitions="*,Auto"
                                  Grid.ColumnSpan="1"
                                  Grid.RowSpan="2"
                                  Padding="1"
                                  Margin="1">
                                    <CheckBox Color="{DynamicResource Tertiary}" 
                                                  x:DataType="model:Item"
                                                  BindingContext="{x:Reference ItemFrame}"
                                                  IsChecked="{Binding IsCompleted, Source={RelativeSource AncestorType={x:Type model:Item}}}"
                                                  CheckedChanged="OnCheckboxClicked"
                                                  Grid.Row="1"
                                                  Grid.RowSpan="2"
                                                  Grid.Column="0" />
                                    <Label Text="{Binding Name}"
                                           Grid.Row="1"
                                           Grid.Column="1"
                                           Grid.RowSpan="1"/>
                                    <Label Text="{Binding Aisle}"
                                           Grid.Row="1"
                                           Grid.Column="2"
                                           Grid.ColumnSpan="2"
                                           HorizontalOptions="End"
					                       />
                                </Grid>
                            </Frame>
                            </SwipeView>
                        </Grid>
                </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>
       <!-- </RefreshView>-->

        <Grid   Grid.ColumnSpan="3"
                ColumnDefinitions="*,*,*"
                Grid.Row="1"
                >
            <controls:CircularButton  
			            Grid.Row="0"
			            Grid.Column="2"
                        x:Name="NewItemButton"
                        Margin="25,25,25,25"
                        WidthRequest="75"
                        HeightRequest="75"
                        ButtonColor="{StaticResource Tertiary}"
                        BackgroundColor="Transparent"
                        Image="plus_sign.png"
                        VerticalOptions="End"
                        HorizontalOptions="End"
			            >
                <controls:CircularButton.GestureRecognizers>
                    <TapGestureRecognizer Tapped="NewItemButtonPressed"/>
                </controls:CircularButton.GestureRecognizers>
            </controls:CircularButton>


            <controls:CircularButton  
			            Grid.Row="0"
			            Grid.Column="0"
                        x:Name="UndoButton"
                        WidthRequest="75"
                        HeightRequest="75"
                        Margin="25,25,25,25"
                        ButtonColor="{StaticResource Tertiary}"
                        BackgroundColor="Transparent"
                        Image="undo.png"
                        VerticalOptions="End"
                        HorizontalOptions="Start"
                        IsEnabled="{Binding HasUndo}"
                        IsVisible="{Binding HasUndo}"
			            >
                <controls:CircularButton.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding UndoButtonPressedCommand}"/>
                </controls:CircularButton.GestureRecognizers>
            </controls:CircularButton>
        </Grid>
    </Grid>

</ContentPage>
